directive @isAuthenticated(roles: [UserRole!]) on OBJECT | FIELD_DEFINITION
directive @requiresPermissions(all: [String!], any: [String!]) on OBJECT | FIELD_DEFINITION

extend type Query {
  currentUser: User
}

extend type Mutation {
  login(username: String!, password: String!): AuthenticatedUser
  signup(name: String!, username: String!, email: String!, password: String!): User!
  resetPassword(usernameOrEmail: String!): Boolean!
  recoverPassword(token: String!, password: String!): User!
  changePassword(userId: ID!, oldPassword: String!, password: String!): User!
  confirmUserAccount(token: String!): UserAccount!
}

type UserAccount {
  id: ID!
  isActive: Boolean!
  users: [User!]!
  owner: User!
}

type User {
  id: ID!
  account: UserAccount!
  name: String
  username: String
  email: String
  isActive: Boolean!
  roles: [UserRole!]!
  createdAt: DateTime
  lastLogin: DateTime
}

type AuthenticatedUser {
  token: String
  user: User
}

enum UserRole {
  ADMIN
}
